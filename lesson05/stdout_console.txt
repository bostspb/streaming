>>> from pyspark.sql import SparkSession
>>> from pyspark.sql import functions as F
>>> from pyspark.sql.types import StructType, StringType
>>> import datetime
>>>
>>> spark = SparkSession.builder.appName("stream_aggregation_app").getOrCreate()
>>>
>>> kafka_brokers = "bigdataanalytics2-worker-shdpt-v31-1-0:6667"
>>>
>>> checkpoint_location = "tmp/orders_checkpoint"
>>> kafka_topic = "lesson5_student782_3_orders_topic_json"  # SET YOUR TARGET TOPIC
>>>
>>> # read orders from kafka as a stream
... raw_orders = spark.readStream. \
...     format("kafka"). \
...     option("kafka.bootstrap.servers", kafka_brokers). \
...     option("subscribe", kafka_topic). \
...     option("maxOffsetsPerTrigger", "15"). \
...     option("startingOffsets", "earliest"). \
...     load()
>>>
>>> # kafka value schema
... schema = StructType() \
...     .add("order_id", StringType()) \
...     .add("customer_id", StringType()) \
...     .add("order_status", StringType()) \
...     .add("order_purchase_timestamp", StringType()) \
...     .add("order_approved_at", StringType()) \
...     .add("order_delivered_carrier_date", StringType()) \
...     .add("order_delivered_customer_date", StringType()) \
...     .add("order_estimated_delivery_date", StringType())
>>>
>>> value_orders = raw_orders \
...     .select(F.from_json(F.col("value").cast("String"), schema).alias("value"), "offset")
>>>
>>> # adding timestamp column to orders
... orders_with_ts = value_orders.select("value.order_id", "value.order_status") \
...                     .withColumn("order_receive_time", F.current_timestamp())
>>>
>>>
>>> orders_with_ts.printSchema()
root
 |-- order_id: string (nullable = true)
 |-- order_status: string (nullable = true)
 |-- order_receive_time: timestamp (nullable = false)

>>>
>>> # Console output
... def console_output(df, freq):
...     date = datetime.datetime.now().strftime("%Y%m%d%H%M%S")
...     return df.writeStream \
...         .format("console") \
...         .trigger(processingTime='%s seconds' % freq) \
...         .option("checkpointLocation", checkpoint_location + "/" + date) \
...         .options(truncate=False) \
...         .start()
...
>>>
>>> stream = console_output(orders_with_ts, 10)
21/08/12 17:08:45 WARN shortcircuit.DomainSocketFactory: The short-circuit local reads feature cannot be used because libhadoop cannot be loaded.
-------------------------------------------
Batch: 0
-------------------------------------------
+--------------------------------+------------+-----------------------+
|order_id                        |order_status|order_receive_time     |
+--------------------------------+------------+-----------------------+
|ad21c59c0840e6cb83a9ceb5573f8159|delivered   |2021-08-12 17:08:50.929|
|136cce7faa42fdb2cefd53fdc79a6098|invoiced    |2021-08-12 17:08:50.929|
|76c6e866289321a7c93b82b54852dc33|delivered   |2021-08-12 17:08:50.929|
|e6ce16cb79ec1d90b1da9085a6118aeb|delivered   |2021-08-12 17:08:50.929|
|e481f51cbdc54678b7cc49136f2d6af7|delivered   |2021-08-12 17:08:50.929|
|53cdb2fc8bc7dce0b6741e2150273451|delivered   |2021-08-12 17:08:50.929|
|949d5b44dbf5de918fe9c16f97b45f8a|delivered   |2021-08-12 17:08:50.929|
|a4591c265e18cb1dcee52889e2d8acc3|delivered   |2021-08-12 17:08:50.929|
|6514b8ad8028c9f2cc2374ded245783f|delivered   |2021-08-12 17:08:50.929|
|47770eb9100c2d0c44946d9cf07ec65d|delivered   |2021-08-12 17:08:50.929|
|e69bfb5eb88e0ed6a785585b27e16dbf|delivered   |2021-08-12 17:08:50.929|
|dcb36b511fcac050b97cd5c05de84dc3|delivered   |2021-08-12 17:08:50.929|
|2807d0e504d6d4894d41672727bc139f|delivered   |2021-08-12 17:08:50.929|
+--------------------------------+------------+-----------------------+

21/08/12 17:08:59 WARN streaming.ProcessingTimeExecutor: Current batch is falling behind. The trigger interval is 10000 milliseconds, but spent 13081 milliseconds
stream.stop(stream.stop()stream.stop()
  File "<stdin>", line 1
    stream.stop(stream.stop()stream.stop()
                                  ^
SyntaxError: invalid syntax
>>> -------------------------------------------
Batch: 1
-------------------------------------------
+--------------------------------+------------+-----------------------+
|order_id                        |order_status|order_receive_time     |
+--------------------------------+------------+-----------------------+
|403b97836b0c04a622354cf531062e5f|delivered   |2021-08-12 17:09:00.051|
|85ce859fd6dc634de8d2f1e290444043|delivered   |2021-08-12 17:09:00.051|
|1790eea0b567cf50911c057cf20f90f9|delivered   |2021-08-12 17:09:00.051|
|8563039e855156e48fccee4d611a3196|delivered   |2021-08-12 17:09:00.051|
|34513ce0c4fab462a55830c0989c7edb|delivered   |2021-08-12 17:09:00.051|
|82566a660a982b15fb86e904c8d32918|delivered   |2021-08-12 17:09:00.051|
|5ff96c15d0b717ac6ad1f3d77225a350|delivered   |2021-08-12 17:09:00.051|
|432aaf21d85167c2c86ec9448c4e42cc|delivered   |2021-08-12 17:09:00.051|
|116f0b09343b49556bbad5f35bee0cdf|delivered   |2021-08-12 17:09:00.051|
|95266dbfb7e20354baba07964dac78d5|delivered   |2021-08-12 17:09:00.051|
|fbf9ac61453ac646ce8ad9783d7d0af6|delivered   |2021-08-12 17:09:00.051|
|acce194856392f074dbf9dada14d8d82|delivered   |2021-08-12 17:09:00.051|
|dd78f560c270f1909639c11b925620ea|delivered   |2021-08-12 17:09:00.051|
+--------------------------------+------------+-----------------------+

21/08/12 17:09:44 WARN streaming.ProcessingTimeExecutor: Current batch is falling behind. The trigger interval is 10000 milliseconds, but spent 44229 milliseconds
-------------------------------------------
Batch: 2
-------------------------------------------
+--------------------------------+------------+-----------------------+
|order_id                        |order_status|order_receive_time     |
+--------------------------------+------------+-----------------------+
|434d158e96bdd6972ad6e6d73ddcfd22|delivered   |2021-08-12 17:09:44.227|
|948097deef559c742e7ce321e5e58919|delivered   |2021-08-12 17:09:44.227|
|d22e9fa5731b9e30e8b27afcdc2f8563|delivered   |2021-08-12 17:09:44.227|
|ee64d42b8cf066f35eac1cf57de1aa85|shipped     |2021-08-12 17:09:44.227|
|83018ec114eee8641c97e08f7b4e926f|delivered   |2021-08-12 17:09:44.227|
|203096f03d82e0dffbc41ebc2e2bcfb7|delivered   |2021-08-12 17:09:44.227|
|f848643eec1d69395095eb3840d2051e|delivered   |2021-08-12 17:09:44.227|
|f3e7c359154d965827355f39d6b1fdac|delivered   |2021-08-12 17:09:44.227|
|ecab90c9933c58908d3d6add7c6f5ae3|delivered   |2021-08-12 17:09:44.227|
|91b2a010e1e45e6ba3d133fa997597be|delivered   |2021-08-12 17:09:44.227|
|f70a0aff17df5a6cdd9a7196128bd354|delivered   |2021-08-12 17:09:44.227|
|989225ba6d0ebd5873335f7e01de2ae7|delivered   |2021-08-12 17:09:44.227|
|b276e4f8c0fb86bd82fce576f21713e0|delivered   |2021-08-12 17:09:44.227|
+--------------------------------+------------+-----------------------+

stream.stop()
>>> waterwarked_orders = orders_with_ts.withWatermark("order_receive_time", "1 hour")
>>> waterwarked_orders.printSchema()
root
 |-- order_id: string (nullable = true)
 |-- order_status: string (nullable = true)
 |-- order_receive_time: timestamp (nullable = false)

>>> stream = console_output(waterwarked_orders, 20)
>>> -------------------------------------------
Batch: 0
-------------------------------------------
+--------------------------------+------------+-----------------------+
|order_id                        |order_status|order_receive_time     |
+--------------------------------+------------+-----------------------+
|ad21c59c0840e6cb83a9ceb5573f8159|delivered   |2021-08-12 17:10:31.644|
|136cce7faa42fdb2cefd53fdc79a6098|invoiced    |2021-08-12 17:10:31.644|
|76c6e866289321a7c93b82b54852dc33|delivered   |2021-08-12 17:10:31.644|
|e6ce16cb79ec1d90b1da9085a6118aeb|delivered   |2021-08-12 17:10:31.644|
|e481f51cbdc54678b7cc49136f2d6af7|delivered   |2021-08-12 17:10:31.644|
|53cdb2fc8bc7dce0b6741e2150273451|delivered   |2021-08-12 17:10:31.644|
|949d5b44dbf5de918fe9c16f97b45f8a|delivered   |2021-08-12 17:10:31.644|
|a4591c265e18cb1dcee52889e2d8acc3|delivered   |2021-08-12 17:10:31.644|
|6514b8ad8028c9f2cc2374ded245783f|delivered   |2021-08-12 17:10:31.644|
|47770eb9100c2d0c44946d9cf07ec65d|delivered   |2021-08-12 17:10:31.644|
|e69bfb5eb88e0ed6a785585b27e16dbf|delivered   |2021-08-12 17:10:31.644|
|dcb36b511fcac050b97cd5c05de84dc3|delivered   |2021-08-12 17:10:31.644|
|2807d0e504d6d4894d41672727bc139f|delivered   |2021-08-12 17:10:31.644|
+--------------------------------+------------+-----------------------+

-------------------------------------------
Batch: 1
-------------------------------------------
+--------------------------------+------------+-----------------------+
|order_id                        |order_status|order_receive_time     |
+--------------------------------+------------+-----------------------+
|403b97836b0c04a622354cf531062e5f|delivered   |2021-08-12 17:10:40.006|
|85ce859fd6dc634de8d2f1e290444043|delivered   |2021-08-12 17:10:40.006|
|1790eea0b567cf50911c057cf20f90f9|delivered   |2021-08-12 17:10:40.006|
|8563039e855156e48fccee4d611a3196|delivered   |2021-08-12 17:10:40.006|
|34513ce0c4fab462a55830c0989c7edb|delivered   |2021-08-12 17:10:40.006|
|82566a660a982b15fb86e904c8d32918|delivered   |2021-08-12 17:10:40.006|
|5ff96c15d0b717ac6ad1f3d77225a350|delivered   |2021-08-12 17:10:40.006|
|432aaf21d85167c2c86ec9448c4e42cc|delivered   |2021-08-12 17:10:40.006|
|116f0b09343b49556bbad5f35bee0cdf|delivered   |2021-08-12 17:10:40.006|
|95266dbfb7e20354baba07964dac78d5|delivered   |2021-08-12 17:10:40.006|
|fbf9ac61453ac646ce8ad9783d7d0af6|delivered   |2021-08-12 17:10:40.006|
|acce194856392f074dbf9dada14d8d82|delivered   |2021-08-12 17:10:40.006|
|dd78f560c270f1909639c11b925620ea|delivered   |2021-08-12 17:10:40.006|
+--------------------------------+------------+-----------------------+

stream.stop()
>>> deduplicated_orders = waterwarked_orders.drop_duplicates(["order_status", "order_receive_time"])
>>>
>>> waterwarked_orders.min()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/spark2.4/python/pyspark/sql/dataframe.py", line 1305, in __getattr__
    "'%s' object has no attribute '%s'" % (self.__class__.__name__, name))
AttributeError: 'DataFrame' object has no attribute 'min'
>>>
>>> deduplicated_orders.min()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/spark2.4/python/pyspark/sql/dataframe.py", line 1305, in __getattr__
    "'%s' object has no attribute '%s'" % (self.__class__.__name__, name))
AttributeError: 'DataFrame' object has no attribute 'min'
>>> stream = console_output(deduplicated_orders, 20)
>>> -------------------------------------------
Batch: 0
-------------------------------------------
+--------------------------------+------------+-----------------------+
|order_id                        |order_status|order_receive_time     |
+--------------------------------+------------+-----------------------+
|ad21c59c0840e6cb83a9ceb5573f8159|delivered   |2021-08-12 17:12:12.231|
|136cce7faa42fdb2cefd53fdc79a6098|invoiced    |2021-08-12 17:12:12.231|
+--------------------------------+------------+-----------------------+

stream.stop()-------------------------------------------
Batch: 1
-------------------------------------------
+--------------------------------+------------+-----------------------+
|order_id                        |order_status|order_receive_time     |
+--------------------------------+------------+-----------------------+
|403b97836b0c04a622354cf531062e5f|delivered   |2021-08-12 17:12:20.005|
+--------------------------------+------------+-----------------------+

stream.stop()
  File "<stdin>", line 1
    stream.stop()stream.stop()
                      ^
SyntaxError: invalid syntax
>>> stream.stop()
>>> windowed_orders = orders_with_ts.withColumn("window_time", F.window(F.col("order_receive_time"), "2 minute"))
>>> windowed_orders.printSchema()
root
 |-- order_id: string (nullable = true)
 |-- order_status: string (nullable = true)
 |-- order_receive_time: timestamp (nullable = false)
 |-- window_time: struct (nullable = false)
 |    |-- start: timestamp (nullable = true)
 |    |-- end: timestamp (nullable = true)

>>> stream = console_output(windowed_orders, 20)
>>> -------------------------------------------
Batch: 0
-------------------------------------------
+--------------------------------+------------+-----------------------+------------------------------------------+
|order_id                        |order_status|order_receive_time     |window_time                               |
+--------------------------------+------------+-----------------------+------------------------------------------+
|ad21c59c0840e6cb83a9ceb5573f8159|delivered   |2021-08-12 17:18:05.372|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|136cce7faa42fdb2cefd53fdc79a6098|invoiced    |2021-08-12 17:18:05.372|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|76c6e866289321a7c93b82b54852dc33|delivered   |2021-08-12 17:18:05.372|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|e6ce16cb79ec1d90b1da9085a6118aeb|delivered   |2021-08-12 17:18:05.372|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|e481f51cbdc54678b7cc49136f2d6af7|delivered   |2021-08-12 17:18:05.372|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|53cdb2fc8bc7dce0b6741e2150273451|delivered   |2021-08-12 17:18:05.372|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|949d5b44dbf5de918fe9c16f97b45f8a|delivered   |2021-08-12 17:18:05.372|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|a4591c265e18cb1dcee52889e2d8acc3|delivered   |2021-08-12 17:18:05.372|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|6514b8ad8028c9f2cc2374ded245783f|delivered   |2021-08-12 17:18:05.372|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|47770eb9100c2d0c44946d9cf07ec65d|delivered   |2021-08-12 17:18:05.372|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|e69bfb5eb88e0ed6a785585b27e16dbf|delivered   |2021-08-12 17:18:05.372|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|dcb36b511fcac050b97cd5c05de84dc3|delivered   |2021-08-12 17:18:05.372|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|2807d0e504d6d4894d41672727bc139f|delivered   |2021-08-12 17:18:05.372|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
+--------------------------------+------------+-----------------------+------------------------------------------+

-------------------------------------------
Batch: 1
-------------------------------------------
+--------------------------------+------------+-----------------------+------------------------------------------+
|order_id                        |order_status|order_receive_time     |window_time                               |
+--------------------------------+------------+-----------------------+------------------------------------------+
|403b97836b0c04a622354cf531062e5f|delivered   |2021-08-12 17:18:20.007|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|85ce859fd6dc634de8d2f1e290444043|delivered   |2021-08-12 17:18:20.007|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|1790eea0b567cf50911c057cf20f90f9|delivered   |2021-08-12 17:18:20.007|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|8563039e855156e48fccee4d611a3196|delivered   |2021-08-12 17:18:20.007|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|34513ce0c4fab462a55830c0989c7edb|delivered   |2021-08-12 17:18:20.007|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|82566a660a982b15fb86e904c8d32918|delivered   |2021-08-12 17:18:20.007|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|5ff96c15d0b717ac6ad1f3d77225a350|delivered   |2021-08-12 17:18:20.007|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|432aaf21d85167c2c86ec9448c4e42cc|delivered   |2021-08-12 17:18:20.007|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|116f0b09343b49556bbad5f35bee0cdf|delivered   |2021-08-12 17:18:20.007|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|95266dbfb7e20354baba07964dac78d5|delivered   |2021-08-12 17:18:20.007|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|fbf9ac61453ac646ce8ad9783d7d0af6|delivered   |2021-08-12 17:18:20.007|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|acce194856392f074dbf9dada14d8d82|delivered   |2021-08-12 17:18:20.007|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|dd78f560c270f1909639c11b925620ea|delivered   |2021-08-12 17:18:20.007|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
+--------------------------------+------------+-----------------------+------------------------------------------+

-------------------------------------------
Batch: 2
-------------------------------------------
+--------------------------------+------------+----------------------+------------------------------------------+
|order_id                        |order_status|order_receive_time    |window_time                               |
+--------------------------------+------------+----------------------+------------------------------------------+
|434d158e96bdd6972ad6e6d73ddcfd22|delivered   |2021-08-12 17:18:40.01|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|948097deef559c742e7ce321e5e58919|delivered   |2021-08-12 17:18:40.01|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|d22e9fa5731b9e30e8b27afcdc2f8563|delivered   |2021-08-12 17:18:40.01|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|ee64d42b8cf066f35eac1cf57de1aa85|shipped     |2021-08-12 17:18:40.01|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|83018ec114eee8641c97e08f7b4e926f|delivered   |2021-08-12 17:18:40.01|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|203096f03d82e0dffbc41ebc2e2bcfb7|delivered   |2021-08-12 17:18:40.01|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|f848643eec1d69395095eb3840d2051e|delivered   |2021-08-12 17:18:40.01|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|f3e7c359154d965827355f39d6b1fdac|delivered   |2021-08-12 17:18:40.01|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|ecab90c9933c58908d3d6add7c6f5ae3|delivered   |2021-08-12 17:18:40.01|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|91b2a010e1e45e6ba3d133fa997597be|delivered   |2021-08-12 17:18:40.01|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|f70a0aff17df5a6cdd9a7196128bd354|delivered   |2021-08-12 17:18:40.01|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|989225ba6d0ebd5873335f7e01de2ae7|delivered   |2021-08-12 17:18:40.01|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|b276e4f8c0fb86bd82fce576f21713e0|delivered   |2021-08-12 17:18:40.01|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
+--------------------------------+------------+----------------------+------------------------------------------+

stream.stop()
>>> waterwarked_windowed_orders = windowed_orders.withWatermark("window_time", "1 minute")
>>> stream = console_output(waterwarked_windowed_orders, 10)
>>> -------------------------------------------
Batch: 0
-------------------------------------------
+--------------------------------+------------+----------------------+------------------------------------------+
|order_id                        |order_status|order_receive_time    |window_time                               |
+--------------------------------+------------+----------------------+------------------------------------------+
|ad21c59c0840e6cb83a9ceb5573f8159|delivered   |2021-08-12 17:19:03.06|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|136cce7faa42fdb2cefd53fdc79a6098|invoiced    |2021-08-12 17:19:03.06|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|76c6e866289321a7c93b82b54852dc33|delivered   |2021-08-12 17:19:03.06|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|e6ce16cb79ec1d90b1da9085a6118aeb|delivered   |2021-08-12 17:19:03.06|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|e481f51cbdc54678b7cc49136f2d6af7|delivered   |2021-08-12 17:19:03.06|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|53cdb2fc8bc7dce0b6741e2150273451|delivered   |2021-08-12 17:19:03.06|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|949d5b44dbf5de918fe9c16f97b45f8a|delivered   |2021-08-12 17:19:03.06|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|a4591c265e18cb1dcee52889e2d8acc3|delivered   |2021-08-12 17:19:03.06|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|6514b8ad8028c9f2cc2374ded245783f|delivered   |2021-08-12 17:19:03.06|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|47770eb9100c2d0c44946d9cf07ec65d|delivered   |2021-08-12 17:19:03.06|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|e69bfb5eb88e0ed6a785585b27e16dbf|delivered   |2021-08-12 17:19:03.06|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|dcb36b511fcac050b97cd5c05de84dc3|delivered   |2021-08-12 17:19:03.06|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|2807d0e504d6d4894d41672727bc139f|delivered   |2021-08-12 17:19:03.06|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
+--------------------------------+------------+----------------------+------------------------------------------+

-------------------------------------------
Batch: 1
-------------------------------------------
+--------------------------------+------------+-----------------------+------------------------------------------+
|order_id                        |order_status|order_receive_time     |window_time                               |
+--------------------------------+------------+-----------------------+------------------------------------------+
|403b97836b0c04a622354cf531062e5f|delivered   |2021-08-12 17:19:03.316|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|85ce859fd6dc634de8d2f1e290444043|delivered   |2021-08-12 17:19:03.316|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|1790eea0b567cf50911c057cf20f90f9|delivered   |2021-08-12 17:19:03.316|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|8563039e855156e48fccee4d611a3196|delivered   |2021-08-12 17:19:03.316|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|34513ce0c4fab462a55830c0989c7edb|delivered   |2021-08-12 17:19:03.316|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|82566a660a982b15fb86e904c8d32918|delivered   |2021-08-12 17:19:03.316|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|5ff96c15d0b717ac6ad1f3d77225a350|delivered   |2021-08-12 17:19:03.316|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|432aaf21d85167c2c86ec9448c4e42cc|delivered   |2021-08-12 17:19:03.316|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|116f0b09343b49556bbad5f35bee0cdf|delivered   |2021-08-12 17:19:03.316|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|95266dbfb7e20354baba07964dac78d5|delivered   |2021-08-12 17:19:03.316|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|fbf9ac61453ac646ce8ad9783d7d0af6|delivered   |2021-08-12 17:19:03.316|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|acce194856392f074dbf9dada14d8d82|delivered   |2021-08-12 17:19:03.316|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|dd78f560c270f1909639c11b925620ea|delivered   |2021-08-12 17:19:03.316|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
+--------------------------------+------------+-----------------------+------------------------------------------+

-------------------------------------------
Batch: 2
-------------------------------------------
+--------------------------------+------------+-----------------------+------------------------------------------+
|order_id                        |order_status|order_receive_time     |window_time                               |
+--------------------------------+------------+-----------------------+------------------------------------------+
|434d158e96bdd6972ad6e6d73ddcfd22|delivered   |2021-08-12 17:19:10.006|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|948097deef559c742e7ce321e5e58919|delivered   |2021-08-12 17:19:10.006|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|d22e9fa5731b9e30e8b27afcdc2f8563|delivered   |2021-08-12 17:19:10.006|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|ee64d42b8cf066f35eac1cf57de1aa85|shipped     |2021-08-12 17:19:10.006|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|83018ec114eee8641c97e08f7b4e926f|delivered   |2021-08-12 17:19:10.006|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|203096f03d82e0dffbc41ebc2e2bcfb7|delivered   |2021-08-12 17:19:10.006|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|f848643eec1d69395095eb3840d2051e|delivered   |2021-08-12 17:19:10.006|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|f3e7c359154d965827355f39d6b1fdac|delivered   |2021-08-12 17:19:10.006|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|ecab90c9933c58908d3d6add7c6f5ae3|delivered   |2021-08-12 17:19:10.006|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|91b2a010e1e45e6ba3d133fa997597be|delivered   |2021-08-12 17:19:10.006|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|f70a0aff17df5a6cdd9a7196128bd354|delivered   |2021-08-12 17:19:10.006|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|989225ba6d0ebd5873335f7e01de2ae7|delivered   |2021-08-12 17:19:10.006|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|b276e4f8c0fb86bd82fce576f21713e0|delivered   |2021-08-12 17:19:10.006|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
+--------------------------------+------------+-----------------------+------------------------------------------+

-------------------------------------------
Batch: 3
-------------------------------------------
+--------------------------------+------------+-----------------------+------------------------------------------+
|order_id                        |order_status|order_receive_time     |window_time                               |
+--------------------------------+------------+-----------------------+------------------------------------------+
|d17dc4a904426827ca80f2ccb3a6be56|delivered   |2021-08-12 17:19:20.005|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|2ce1ad82022c1ba30c2079502ac725aa|delivered   |2021-08-12 17:19:20.005|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|138849fd84dff2fb4ca70a0a34c4aa1c|delivered   |2021-08-12 17:19:20.005|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|47aa4816b27ba60ec948cd019cc1afc1|delivered   |2021-08-12 17:19:20.005|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|d887b52c6516beb39e8cd44a5f8b60f7|delivered   |2021-08-12 17:19:20.005|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|1e7aff52cdbb2451ace09d0f848c3699|delivered   |2021-08-12 17:19:20.005|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|6ebaec694d7025e2ad4a05dba887c032|delivered   |2021-08-12 17:19:20.005|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|5820a1100976432c7968a52da59e9364|delivered   |2021-08-12 17:19:20.005|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|9faeb9b2746b9d7526aef5acb08e2aa0|delivered   |2021-08-12 17:19:20.005|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|60550084e6b4c0cb89a87df1f3e5ebd9|delivered   |2021-08-12 17:19:20.005|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|5acce57f8d9dfd55fa48e212a641a69d|delivered   |2021-08-12 17:19:20.005|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|7206b86ea789983f7a273ea7fa0bc2a8|delivered   |2021-08-12 17:19:20.005|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|6ea2f835b4556291ffdc53fa0b3b95e8|delivered   |2021-08-12 17:19:20.005|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
+--------------------------------+------------+-----------------------+------------------------------------------+

-------------------------------------------
Batch: 4
-------------------------------------------
+--------------------------------+------------+-----------------------+------------------------------------------+
|order_id                        |order_status|order_receive_time     |window_time                               |
+--------------------------------+------------+-----------------------+------------------------------------------+
|641fb0752bf5b5940c376b3a8bb9dc52|delivered   |2021-08-12 17:19:30.005|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|f271576bed568e896f99eb710cd3a6f8|delivered   |2021-08-12 17:19:30.005|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|974c1993ab8024d3ed16229183c2308d|delivered   |2021-08-12 17:19:30.005|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|82bce245b1c9148f8d19a55b9ff70644|delivered   |2021-08-12 17:19:30.005|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|e425680f760cbc130be3e53a9773c584|delivered   |2021-08-12 17:19:30.005|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|66e4624ae69e7dc89bd50222b59f581f|delivered   |2021-08-12 17:19:30.005|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|8f06cc6465925031568537b815f1198d|delivered   |2021-08-12 17:19:30.005|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|688052146432ef8253587b930b01a06d|delivered   |2021-08-12 17:19:30.005|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|686541986ecfb7d9296eb67719973bf0|delivered   |2021-08-12 17:19:30.005|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|25f4376934e13d3508486352e11a5db0|delivered   |2021-08-12 17:19:30.005|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|40c5e18f7d112b59b3e5113a59a905b3|delivered   |2021-08-12 17:19:30.005|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|734e7d1bbaeb2ff82521ca0fe6fb6f79|delivered   |2021-08-12 17:19:30.005|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|a685d016c8a26f71a0bb67821070e398|delivered   |2021-08-12 17:19:30.005|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
+--------------------------------+------------+-----------------------+------------------------------------------+

-------------------------------------------
Batch: 5
-------------------------------------------
+--------------------------------+------------+-----------------------+------------------------------------------+
|order_id                        |order_status|order_receive_time     |window_time                               |
+--------------------------------+------------+-----------------------+------------------------------------------+
|634e8f4c0f6744a626f77f39770ac6aa|delivered   |2021-08-12 17:19:40.004|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|6d25592267349b322799e2beb687871e|delivered   |2021-08-12 17:19:40.004|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|10c320f977c6a18f91b2d14be13128c6|delivered   |2021-08-12 17:19:40.004|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|e4de6d53ecff736bc68804b0b6e9f635|delivered   |2021-08-12 17:19:40.004|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|68e48e68da1f50f7c5838ea75e3a20dd|delivered   |2021-08-12 17:19:40.004|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|fdf128b3630c21adc9ca4fb8a51b68ec|delivered   |2021-08-12 17:19:40.004|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|a6aeb116d2cb5013eb8a94585b71ffef|delivered   |2021-08-12 17:19:40.004|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|fa516182d28f96f5f5c651026b0749ee|delivered   |2021-08-12 17:19:40.004|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|6abaad69b8b349c3a529b4b91ce18e46|delivered   |2021-08-12 17:19:40.004|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|2edfd6d1f0b4cd0db4bf37b1b224d855|delivered   |2021-08-12 17:19:40.004|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|68873cf91053cd11e6b49a766db5af1a|delivered   |2021-08-12 17:19:40.004|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|f346ad4ee8f630e5e4ddaf862a34e6dd|delivered   |2021-08-12 17:19:40.004|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
|ccbabeb0b02433bd0fcbac46e70339f2|delivered   |2021-08-12 17:19:40.004|[2021-08-12 17:18:00, 2021-08-12 17:20:00]|
+--------------------------------+------------+-----------------------+------------------------------------------+

stream.stop()
>>> deduplicated_windowed_orders = waterwarked_windowed_orders.drop_duplicates(["order_status", "window_time"])
>>>
>>> stream = console_output(deduplicated_windowed_orders, 10)
>>> -------------------------------------------
Batch: 0
-------------------------------------------
+--------------------------------+------------+-----------------------+------------------------------------------+
|order_id                        |order_status|order_receive_time     |window_time                               |
+--------------------------------+------------+-----------------------+------------------------------------------+
|136cce7faa42fdb2cefd53fdc79a6098|invoiced    |2021-08-12 17:20:15.358|[2021-08-12 17:20:00, 2021-08-12 17:22:00]|
|ad21c59c0840e6cb83a9ceb5573f8159|delivered   |2021-08-12 17:20:15.358|[2021-08-12 17:20:00, 2021-08-12 17:22:00]|
+--------------------------------+------------+-----------------------+------------------------------------------+

-------------------------------------------
Batch: 1
-------------------------------------------
+--------+------------+------------------+-----------+
|order_id|order_status|order_receive_time|window_time|
+--------+------------+------------------+-----------+
+--------+------------+------------------+-----------+

stream.stop()
>>> sliding_orders = orders_with_ts.withColumn("sliding_time", F.window(F.col("order_receive_time"), "1 minute", "30 seconds"))
>>> sliding_orders.printSchema()
root
 |-- order_id: string (nullable = true)
 |-- order_status: string (nullable = true)
 |-- order_receive_time: timestamp (nullable = false)
 |-- sliding_time: struct (nullable = true)
 |    |-- start: timestamp (nullable = true)
 |    |-- end: timestamp (nullable = true)

>>>
>>> stream = console_output(sliding_orders, 20)
>>> -------------------------------------------
Batch: 0
-------------------------------------------
+--------------------------------+------------+-----------------------+------------------------------------------+
|order_id                        |order_status|order_receive_time     |sliding_time                              |
+--------------------------------+------------+-----------------------+------------------------------------------+
|ad21c59c0840e6cb83a9ceb5573f8159|delivered   |2021-08-12 17:20:47.151|[2021-08-12 17:20:00, 2021-08-12 17:21:00]|
|ad21c59c0840e6cb83a9ceb5573f8159|delivered   |2021-08-12 17:20:47.151|[2021-08-12 17:20:30, 2021-08-12 17:21:30]|
|136cce7faa42fdb2cefd53fdc79a6098|invoiced    |2021-08-12 17:20:47.151|[2021-08-12 17:20:00, 2021-08-12 17:21:00]|
|136cce7faa42fdb2cefd53fdc79a6098|invoiced    |2021-08-12 17:20:47.151|[2021-08-12 17:20:30, 2021-08-12 17:21:30]|
|76c6e866289321a7c93b82b54852dc33|delivered   |2021-08-12 17:20:47.151|[2021-08-12 17:20:00, 2021-08-12 17:21:00]|
|76c6e866289321a7c93b82b54852dc33|delivered   |2021-08-12 17:20:47.151|[2021-08-12 17:20:30, 2021-08-12 17:21:30]|
|e6ce16cb79ec1d90b1da9085a6118aeb|delivered   |2021-08-12 17:20:47.151|[2021-08-12 17:20:00, 2021-08-12 17:21:00]|
|e6ce16cb79ec1d90b1da9085a6118aeb|delivered   |2021-08-12 17:20:47.151|[2021-08-12 17:20:30, 2021-08-12 17:21:30]|
|e481f51cbdc54678b7cc49136f2d6af7|delivered   |2021-08-12 17:20:47.151|[2021-08-12 17:20:00, 2021-08-12 17:21:00]|
|e481f51cbdc54678b7cc49136f2d6af7|delivered   |2021-08-12 17:20:47.151|[2021-08-12 17:20:30, 2021-08-12 17:21:30]|
|53cdb2fc8bc7dce0b6741e2150273451|delivered   |2021-08-12 17:20:47.151|[2021-08-12 17:20:00, 2021-08-12 17:21:00]|
|53cdb2fc8bc7dce0b6741e2150273451|delivered   |2021-08-12 17:20:47.151|[2021-08-12 17:20:30, 2021-08-12 17:21:30]|
|949d5b44dbf5de918fe9c16f97b45f8a|delivered   |2021-08-12 17:20:47.151|[2021-08-12 17:20:00, 2021-08-12 17:21:00]|
|949d5b44dbf5de918fe9c16f97b45f8a|delivered   |2021-08-12 17:20:47.151|[2021-08-12 17:20:30, 2021-08-12 17:21:30]|
|a4591c265e18cb1dcee52889e2d8acc3|delivered   |2021-08-12 17:20:47.151|[2021-08-12 17:20:00, 2021-08-12 17:21:00]|
|a4591c265e18cb1dcee52889e2d8acc3|delivered   |2021-08-12 17:20:47.151|[2021-08-12 17:20:30, 2021-08-12 17:21:30]|
|6514b8ad8028c9f2cc2374ded245783f|delivered   |2021-08-12 17:20:47.151|[2021-08-12 17:20:00, 2021-08-12 17:21:00]|
|6514b8ad8028c9f2cc2374ded245783f|delivered   |2021-08-12 17:20:47.151|[2021-08-12 17:20:30, 2021-08-12 17:21:30]|
|47770eb9100c2d0c44946d9cf07ec65d|delivered   |2021-08-12 17:20:47.151|[2021-08-12 17:20:00, 2021-08-12 17:21:00]|
|47770eb9100c2d0c44946d9cf07ec65d|delivered   |2021-08-12 17:20:47.151|[2021-08-12 17:20:30, 2021-08-12 17:21:30]|
+--------------------------------+------------+-----------------------+------------------------------------------+
only showing top 20 rows

-------------------------------------------
Batch: 1
-------------------------------------------
+--------------------------------+------------+-----------------------+------------------------------------------+
|order_id                        |order_status|order_receive_time     |sliding_time                              |
+--------------------------------+------------+-----------------------+------------------------------------------+
|403b97836b0c04a622354cf531062e5f|delivered   |2021-08-12 17:21:00.004|[2021-08-12 17:20:30, 2021-08-12 17:21:30]|
|403b97836b0c04a622354cf531062e5f|delivered   |2021-08-12 17:21:00.004|[2021-08-12 17:21:00, 2021-08-12 17:22:00]|
|85ce859fd6dc634de8d2f1e290444043|delivered   |2021-08-12 17:21:00.004|[2021-08-12 17:20:30, 2021-08-12 17:21:30]|
|85ce859fd6dc634de8d2f1e290444043|delivered   |2021-08-12 17:21:00.004|[2021-08-12 17:21:00, 2021-08-12 17:22:00]|
|1790eea0b567cf50911c057cf20f90f9|delivered   |2021-08-12 17:21:00.004|[2021-08-12 17:20:30, 2021-08-12 17:21:30]|
|1790eea0b567cf50911c057cf20f90f9|delivered   |2021-08-12 17:21:00.004|[2021-08-12 17:21:00, 2021-08-12 17:22:00]|
|8563039e855156e48fccee4d611a3196|delivered   |2021-08-12 17:21:00.004|[2021-08-12 17:20:30, 2021-08-12 17:21:30]|
|8563039e855156e48fccee4d611a3196|delivered   |2021-08-12 17:21:00.004|[2021-08-12 17:21:00, 2021-08-12 17:22:00]|
|34513ce0c4fab462a55830c0989c7edb|delivered   |2021-08-12 17:21:00.004|[2021-08-12 17:20:30, 2021-08-12 17:21:30]|
|34513ce0c4fab462a55830c0989c7edb|delivered   |2021-08-12 17:21:00.004|[2021-08-12 17:21:00, 2021-08-12 17:22:00]|
|82566a660a982b15fb86e904c8d32918|delivered   |2021-08-12 17:21:00.004|[2021-08-12 17:20:30, 2021-08-12 17:21:30]|
|82566a660a982b15fb86e904c8d32918|delivered   |2021-08-12 17:21:00.004|[2021-08-12 17:21:00, 2021-08-12 17:22:00]|
|5ff96c15d0b717ac6ad1f3d77225a350|delivered   |2021-08-12 17:21:00.004|[2021-08-12 17:20:30, 2021-08-12 17:21:30]|
|5ff96c15d0b717ac6ad1f3d77225a350|delivered   |2021-08-12 17:21:00.004|[2021-08-12 17:21:00, 2021-08-12 17:22:00]|
|432aaf21d85167c2c86ec9448c4e42cc|delivered   |2021-08-12 17:21:00.004|[2021-08-12 17:20:30, 2021-08-12 17:21:30]|
|432aaf21d85167c2c86ec9448c4e42cc|delivered   |2021-08-12 17:21:00.004|[2021-08-12 17:21:00, 2021-08-12 17:22:00]|
|116f0b09343b49556bbad5f35bee0cdf|delivered   |2021-08-12 17:21:00.004|[2021-08-12 17:20:30, 2021-08-12 17:21:30]|
|116f0b09343b49556bbad5f35bee0cdf|delivered   |2021-08-12 17:21:00.004|[2021-08-12 17:21:00, 2021-08-12 17:22:00]|
|95266dbfb7e20354baba07964dac78d5|delivered   |2021-08-12 17:21:00.004|[2021-08-12 17:20:30, 2021-08-12 17:21:30]|
|95266dbfb7e20354baba07964dac78d5|delivered   |2021-08-12 17:21:00.004|[2021-08-12 17:21:00, 2021-08-12 17:22:00]|
+--------------------------------+------------+-----------------------+------------------------------------------+
only showing top 20 rows

stream.stop()
>>> deduplicated_sliding_orders = sliding_orders.drop_duplicates(["order_status", "order_receive_time"])
>>> stream = console_output(deduplicated_sliding_orders, 20)
>>> -------------------------------------------
Batch: 0
-------------------------------------------
+--------------------------------+------------+-----------------------+------------------------------------------+
|order_id                        |order_status|order_receive_time     |sliding_time                              |
+--------------------------------+------------+-----------------------+------------------------------------------+
|136cce7faa42fdb2cefd53fdc79a6098|invoiced    |2021-08-12 17:21:42.956|[2021-08-12 17:21:00, 2021-08-12 17:22:00]|
|ad21c59c0840e6cb83a9ceb5573f8159|delivered   |2021-08-12 17:21:42.956|[2021-08-12 17:21:00, 2021-08-12 17:22:00]|
+--------------------------------+------------+-----------------------+------------------------------------------+

-------------------------------------------
Batch: 1
-------------------------------------------
+--------------------------------+------------+-----------------------+------------------------------------------+
|order_id                        |order_status|order_receive_time     |sliding_time                              |
+--------------------------------+------------+-----------------------+------------------------------------------+
|403b97836b0c04a622354cf531062e5f|delivered   |2021-08-12 17:21:43.539|[2021-08-12 17:21:00, 2021-08-12 17:22:00]|
+--------------------------------+------------+-----------------------+------------------------------------------+

-------------------------------------------
Batch: 2
-------------------------------------------
+--------------------------------+------------+-----------------------+------------------------------------------+
|order_id                        |order_status|order_receive_time     |sliding_time                              |
+--------------------------------+------------+-----------------------+------------------------------------------+
|ee64d42b8cf066f35eac1cf57de1aa85|shipped     |2021-08-12 17:22:00.007|[2021-08-12 17:21:30, 2021-08-12 17:22:30]|
|434d158e96bdd6972ad6e6d73ddcfd22|delivered   |2021-08-12 17:22:00.007|[2021-08-12 17:21:30, 2021-08-12 17:22:30]|
+--------------------------------+------------+-----------------------+------------------------------------------+

stream.stop()
>>> waterwarked_sliding_orders = sliding_orders.withWatermark("sliding_time", "2 minutes")
>>> deduplicated_sliding_orders = waterwarked_sliding_orders.drop_duplicates(["order_status", "sliding_time"])
>>>
>>> stream = console_output(deduplicated_sliding_orders , 20)
>>> -------------------------------------------
Batch: 0
-------------------------------------------
+--------------------------------+------------+-----------------------+------------------------------------------+
|order_id                        |order_status|order_receive_time     |sliding_time                              |
+--------------------------------+------------+-----------------------+------------------------------------------+
|136cce7faa42fdb2cefd53fdc79a6098|invoiced    |2021-08-12 17:22:59.155|[2021-08-12 17:22:30, 2021-08-12 17:23:30]|
|ad21c59c0840e6cb83a9ceb5573f8159|delivered   |2021-08-12 17:22:59.155|[2021-08-12 17:22:00, 2021-08-12 17:23:00]|
|136cce7faa42fdb2cefd53fdc79a6098|invoiced    |2021-08-12 17:22:59.155|[2021-08-12 17:22:00, 2021-08-12 17:23:00]|
|ad21c59c0840e6cb83a9ceb5573f8159|delivered   |2021-08-12 17:22:59.155|[2021-08-12 17:22:30, 2021-08-12 17:23:30]|
+--------------------------------+------------+-----------------------+------------------------------------------+

-------------------------------------------
Batch: 1
-------------------------------------------
+--------------------------------+------------+-----------------------+------------------------------------------+
|order_id                        |order_status|order_receive_time     |sliding_time                              |
+--------------------------------+------------+-----------------------+------------------------------------------+
|403b97836b0c04a622354cf531062e5f|delivered   |2021-08-12 17:23:00.005|[2021-08-12 17:23:00, 2021-08-12 17:24:00]|
+--------------------------------+------------+-----------------------+------------------------------------------+

-------------------------------------------
Batch: 2
-------------------------------------------
+--------------------------------+------------+-----------------------+------------------------------------------+
|order_id                        |order_status|order_receive_time     |sliding_time                              |
+--------------------------------+------------+-----------------------+------------------------------------------+
|ee64d42b8cf066f35eac1cf57de1aa85|shipped     |2021-08-12 17:23:20.004|[2021-08-12 17:22:30, 2021-08-12 17:23:30]|
|ee64d42b8cf066f35eac1cf57de1aa85|shipped     |2021-08-12 17:23:20.004|[2021-08-12 17:23:00, 2021-08-12 17:24:00]|
+--------------------------------+------------+-----------------------+------------------------------------------+

stream.stop()
>>> def console_output(df, freq, out_mode):
...     date = datetime.datetime.now().strftime("%Y%m%d%H%M%S")
...     return df.writeStream.format("console") \
...         .trigger(processingTime='%s seconds' % freq) \
...         .options(truncate=False) \
...         .option("checkpointLocation", checkpoint_location + "/" + date) \
...         .outputMode(out_mode) \
...         .start()
...
>>>
>>> windowed_orders = orders_with_ts.withColumn("window_time", F.window(F.col("order_receive_time"), "1 minute"))
>>> waterwarked_windowed_orders = windowed_orders.withWatermark("window_time", "1 minute")
>>>
>>> count_orders = waterwarked_windowed_orders.groupBy("window_time").count()
>>>
>>> # update mode - all records with updated
... stream = console_output(count_orders, 20, "update")
-------------------------------------------
Batch: 0
-------------------------------------------
+------------------------------------------+-----+
|window_time                               |count|
+------------------------------------------+-----+
|[2021-08-12 17:24:00, 2021-08-12 17:25:00]|13   |
+------------------------------------------+-----+

-------------------------------------------
Batch: 1
-------------------------------------------
+------------------------------------------+-----+
|window_time                               |count|
+------------------------------------------+-----+
|[2021-08-12 17:24:00, 2021-08-12 17:25:00]|26   |
+------------------------------------------+-----+

-------------------------------------------
Batch: 2
-------------------------------------------
+------------------------------------------+-----+
|window_time                               |count|
+------------------------------------------+-----+
|[2021-08-12 17:24:00, 2021-08-12 17:25:00]|39   |
+------------------------------------------+-----+

stream.stop()
>>> stream = console_output(count_orders, 20, "complete")
>>> stream.stop()
stream.stop()
^CTraceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/spark2.4/python/pyspark/sql/streaming.py", line 152, in stop
    self._jsq.stop()
  File "/spark2.4/python/lib/py4j-0.10.7-src.zip/py4j/java_gateway.py", line 1255, in __call__
  File "/spark2.4/python/lib/py4j-0.10.7-src.zip/py4j/java_gateway.py", line 985, in send_command
  File "/spark2.4/python/lib/py4j-0.10.7-src.zip/py4j/java_gateway.py", line 1152, in send_command
  File "/usr/lib64/python2.7/socket.py", line 447, in readline
    data = self._sock.recv(self._rbufsize)
  File "/spark2.4/python/pyspark/context.py", line 270, in signal_handler
    raise KeyboardInterrupt()
KeyboardInterrupt
>>> stream = console_output(count_orders, 20, "append")
>>> -------------------------------------------
Batch: 0
-------------------------------------------
+-----------+-----+
|window_time|count|
+-----------+-----+
+-----------+-----+

stream.stop()
>>> sliding_orders = waterwarked_sliding_orders.groupBy("sliding_time").count()
>>> stream = console_output(sliding_orders , 20, "update")
>>> -------------------------------------------
Batch: 0
-------------------------------------------
+------------------------------------------+-----+
|sliding_time                              |count|
+------------------------------------------+-----+
|[2021-08-12 17:27:00, 2021-08-12 17:28:00]|13   |
|[2021-08-12 17:26:30, 2021-08-12 17:27:30]|13   |
+------------------------------------------+-----+

-------------------------------------------
Batch: 1
-------------------------------------------
+------------------------------------------+-----+
|sliding_time                              |count|
+------------------------------------------+-----+
|[2021-08-12 17:27:00, 2021-08-12 17:28:00]|26   |
|[2021-08-12 17:26:30, 2021-08-12 17:27:30]|26   |
+------------------------------------------+-----+

stream.stop()
>>>
>>> static_df = spark.read.load("tmp/orders_file_output/part-*")
>>> static_df.show()
+--------------------+--------------------+------------+------------------------+-------------------+----------------------------+-----------------------------+-----------------------------+
|            order_id|         customer_id|order_status|order_purchase_timestamp|  order_approved_at|order_delivered_carrier_date|order_delivered_customer_date|order_estimated_delivery_date|
+--------------------+--------------------+------------+------------------------+-------------------+----------------------------+-----------------------------+-----------------------------+
|1da00355018ed3e0f...|2c5c2fb51bbbcdcc2...|   delivered|     2017-12-17 19:40:26|2017-12-17 20:50:00|         2017-12-18 16:36:55|          2017-12-27 13:47:01|          2018-01-24 00:00:00|
|f175d67589e059cbb...|a4555d257db29ef5f...|   delivered|     2017-01-05 13:34:35|2017-01-07 03:45:40|         2017-01-11 16:25:57|          2017-01-17 15:52:28|          2017-02-13 00:00:00|
|c263211bd219538f7...|ed8c52327eecff596...|   delivered|     2017-11-24 16:56:46|2017-11-28 03:48:24|         2017-12-08 23:28:26|          2017-12-18 20:24:54|          2017-12-19 00:00:00|
|507240e305d631056...|5cff2efe34e8e6046...|   delivered|     2018-03-29 15:08:14|2018-03-29 15:29:55|         2018-04-02 23:24:37|          2018-04-05 19:34:29|          2018-04-11 00:00:00|
|7e3e92dc3eaf5389f...|62d50e9a714ac024c...|   delivered|     2017-07-02 20:47:24|2017-07-02 21:03:55|         2017-07-03 11:42:08|          2017-07-11 20:22:31|          2017-07-25 00:00:00|
|4d95703047b8a80cf...|da18c242eff18510c...|   delivered|     2018-01-23 23:59:03|2018-01-24 00:16:30|         2018-01-24 16:47:22|          2018-01-30 14:36:52|          2018-02-19 00:00:00|
|955e2b622db1a1f40...|8d0c2ae2c7b532f0e...|   delivered|     2018-01-16 22:34:16|2018-01-17 03:34:29|         2018-01-17 17:26:14|          2018-01-22 23:23:25|          2018-02-06 00:00:00|
|d86359a45e3f6c6d8...|a1acf95041edd0430...|   delivered|     2018-06-06 14:21:47|2018-06-06 14:35:26|         2018-06-08 13:20:00|          2018-06-15 14:28:27|          2018-07-12 00:00:00|
|248ff7b41bfa395f5...|754862f813b4662e8...|   delivered|     2017-11-17 13:12:47|2017-11-17 13:35:40|         2017-11-21 18:18:35|          2017-11-27 20:41:48|          2017-12-12 00:00:00|
|2d5cdc856665603f1...|caecab08cac2be52d...|   delivered|     2018-01-30 17:36:43|2018-01-30 17:57:55|         2018-02-01 18:13:16|          2018-02-05 19:38:56|          2018-02-21 00:00:00|
|45ac1d4b219993bf3...|a7d1dc2de29fc011b...|   delivered|     2018-01-10 09:04:09|2018-01-10 10:31:35|         2018-01-10 22:48:10|          2018-01-17 15:44:12|          2018-02-08 00:00:00|
|c228d309379c3ae54...|eca5e1383292be5fc...|   delivered|     2018-06-30 21:57:55|2018-06-30 22:10:13|         2018-07-02 13:39:00|          2018-07-04 21:48:36|          2018-07-24 00:00:00|
|f419e615bbdeb3474...|271f76c70ce217ee6...|   delivered|     2018-08-08 10:49:59|2018-08-08 11:05:15|         2018-08-10 13:40:00|          2018-08-16 19:18:51|          2018-08-17 00:00:00|
|c10ff28c81d0b9bd2...|05535d34af5324aaf...|   delivered|     2017-10-05 05:23:47|2017-10-05 06:21:20|         2017-10-06 17:16:05|          2017-10-09 18:32:38|          2017-10-30 00:00:00|
|02aec12849744e266...|076dcea2eb6c8dbe9...|   delivered|     2017-08-31 17:46:40|2017-08-31 18:05:09|         2017-09-04 19:22:51|          2017-09-12 20:59:50|          2017-09-27 00:00:00|
|2c3a5e5f5bc3ae78e...|5f2bc926ec92aa65c...|   delivered|     2018-01-22 19:22:26|2018-01-22 19:36:30|         2018-01-24 00:34:56|          2018-02-06 15:49:01|          2018-02-06 00:00:00|
|118045506e1c1dda0...|638c6674418fc5828...|   delivered|     2018-03-08 19:06:05|2018-03-09 19:08:26|         2018-03-13 21:24:28|          2018-04-11 12:53:50|          2018-04-04 00:00:00|
|18bf036204cea32b1...|75c1cc8ffdfa39cfb...|   delivered|     2017-05-08 16:31:38|2017-05-09 16:35:23|         2017-05-11 13:44:39|          2017-05-15 19:27:34|          2017-06-12 00:00:00|
|825c221a4e981f278...|933bf00ad9a4f8bfd...|   delivered|     2017-06-29 23:08:50|2017-06-29 23:23:28|         2017-07-06 14:05:35|          2017-07-10 13:48:36|          2017-07-19 00:00:00|
|6699d7eb202a80ad0...|18715b86f15b55cc0...|   delivered|     2018-01-15 00:14:21|2018-01-15 00:29:16|         2018-01-15 21:33:17|          2018-01-24 20:18:57|          2018-02-19 00:00:00|
+--------------------+--------------------+------------+------------------------+-------------------+----------------------------+-----------------------------+-----------------------------+
only showing top 20 rows

>>> static_joined.printSchema()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'static_joined' is not defined
>>> static_joined = waterwarked_orders.join(static_df, "order_id", "inner")
>>> static_joined.isStreaming
True
>>> static_joined.printSchema()
root
 |-- order_id: string (nullable = true)
 |-- order_status: string (nullable = true)
 |-- order_receive_time: timestamp (nullable = false)
 |-- customer_id: string (nullable = true)
 |-- order_status: string (nullable = true)
 |-- order_purchase_timestamp: string (nullable = true)
 |-- order_approved_at: string (nullable = true)
 |-- order_delivered_carrier_date: string (nullable = true)
 |-- order_delivered_customer_date: string (nullable = true)
 |-- order_estimated_delivery_date: string (nullable = true)

>>> selected_static_joined = static_joined.select("order_id", static_df.order_status, "order_receive_time")
>>>
>>> stream = console_output(selected_static_joined, 20, "update")
>>> -------------------------------------------
Batch: 0
-------------------------------------------
+--------------------------------+------------+-----------------------+
|order_id                        |order_status|order_receive_time     |
+--------------------------------+------------+-----------------------+
|ad21c59c0840e6cb83a9ceb5573f8159|delivered   |2021-08-12 17:29:29.484|
|136cce7faa42fdb2cefd53fdc79a6098|invoiced    |2021-08-12 17:29:29.484|
|76c6e866289321a7c93b82b54852dc33|delivered   |2021-08-12 17:29:29.484|
|e6ce16cb79ec1d90b1da9085a6118aeb|delivered   |2021-08-12 17:29:29.484|
|e481f51cbdc54678b7cc49136f2d6af7|delivered   |2021-08-12 17:29:29.484|
|53cdb2fc8bc7dce0b6741e2150273451|delivered   |2021-08-12 17:29:29.484|
|949d5b44dbf5de918fe9c16f97b45f8a|delivered   |2021-08-12 17:29:29.484|
|a4591c265e18cb1dcee52889e2d8acc3|delivered   |2021-08-12 17:29:29.484|
|6514b8ad8028c9f2cc2374ded245783f|delivered   |2021-08-12 17:29:29.484|
|47770eb9100c2d0c44946d9cf07ec65d|delivered   |2021-08-12 17:29:29.484|
|e69bfb5eb88e0ed6a785585b27e16dbf|delivered   |2021-08-12 17:29:29.484|
|dcb36b511fcac050b97cd5c05de84dc3|delivered   |2021-08-12 17:29:29.484|
|2807d0e504d6d4894d41672727bc139f|delivered   |2021-08-12 17:29:29.484|
+--------------------------------+------------+-----------------------+

-------------------------------------------
Batch: 1
-------------------------------------------
+--------------------------------+------------+-----------------------+
|order_id                        |order_status|order_receive_time     |
+--------------------------------+------------+-----------------------+
|403b97836b0c04a622354cf531062e5f|delivered   |2021-08-12 17:29:40.004|
|85ce859fd6dc634de8d2f1e290444043|delivered   |2021-08-12 17:29:40.004|
|1790eea0b567cf50911c057cf20f90f9|delivered   |2021-08-12 17:29:40.004|
|8563039e855156e48fccee4d611a3196|delivered   |2021-08-12 17:29:40.004|
|34513ce0c4fab462a55830c0989c7edb|delivered   |2021-08-12 17:29:40.004|
|82566a660a982b15fb86e904c8d32918|delivered   |2021-08-12 17:29:40.004|
|5ff96c15d0b717ac6ad1f3d77225a350|delivered   |2021-08-12 17:29:40.004|
|432aaf21d85167c2c86ec9448c4e42cc|delivered   |2021-08-12 17:29:40.004|
|116f0b09343b49556bbad5f35bee0cdf|delivered   |2021-08-12 17:29:40.004|
|95266dbfb7e20354baba07964dac78d5|delivered   |2021-08-12 17:29:40.004|
|fbf9ac61453ac646ce8ad9783d7d0af6|delivered   |2021-08-12 17:29:40.004|
|acce194856392f074dbf9dada14d8d82|delivered   |2021-08-12 17:29:40.004|
|dd78f560c270f1909639c11b925620ea|delivered   |2021-08-12 17:29:40.004|
+--------------------------------+------------+-----------------------+

stream.stop()
>>> raw_orders_items = spark.readStream. \
...     format("kafka"). \
...     option("kafka.bootstrap.servers", kafka_brokers). \
...     option("subscribe", kafka_topic). \
...     option("startingOffsets", "earliest"). \
...     option("maxOffsetsPerTrigger", "15"). \
...     load()
>>> extended_orders_items = raw_orders_items \
...     .select(F.from_json(F.col("value").cast("String"), schema).alias("value")) \
...     .select("value.*") \
...     .withColumn("order_items_receive_time", F.current_timestamp()) \
...     .withColumn("window_time", F.window(F.col("order_items_receive_time"),"10 minute"))
>>> extended_orders_items.printSchema()
root
 |-- order_id: string (nullable = true)
 |-- customer_id: string (nullable = true)
 |-- order_status: string (nullable = true)
 |-- order_purchase_timestamp: string (nullable = true)
 |-- order_approved_at: string (nullable = true)
 |-- order_delivered_carrier_date: string (nullable = true)
 |-- order_delivered_customer_date: string (nullable = true)
 |-- order_estimated_delivery_date: string (nullable = true)
 |-- order_items_receive_time: timestamp (nullable = false)
 |-- window_time: struct (nullable = false)
 |    |-- start: timestamp (nullable = true)
 |    |-- end: timestamp (nullable = true)

>>> stream = console_output(extended_orders_items, 20, "append")
>>> -------------------------------------------
Batch: 0
-------------------------------------------
+--------------------------------+--------------------------------+------------+------------------------+-------------------+----------------------------+-----------------------------+-----------------------------+---------------------
---+------------------------------------------+
|order_id                        |customer_id                     |order_status|order_purchase_timestamp|order_approved_at  |order_delivered_carrier_date|order_delivered_customer_date|order_estimated_delivery_date|order_items_receive_t
ime|window_time                               |
+--------------------------------+--------------------------------+------------+------------------------+-------------------+----------------------------+-----------------------------+-----------------------------+---------------------
---+------------------------------------------+
|ad21c59c0840e6cb83a9ceb5573f8159|8ab97904e6daea8866dbdbc4fb7aad2c|delivered   |2018-02-13 21:18:39     |2018-02-13 22:20:29|2018-02-14 19:46:34         |2018-02-16 18:17:02          |2018-02-26 00:00:00          |2021-08-12 17:30:54.6
26 |[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|136cce7faa42fdb2cefd53fdc79a6098|ed0271e0b7da060a393796590e7b737a|invoiced    |2017-04-11 12:22:08     |2017-04-13 13:25:17|                            |                             |2017-05-09 00:00:00          |2021-08-12 17:30:54.6
26 |[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|76c6e866289321a7c93b82b54852dc33|f54a9f0e6b351c431402b8461ea51999|delivered   |2017-01-23 18:29:09     |2017-01-25 02:50:47|2017-01-26 14:16:31         |2017-02-02 14:08:10          |2017-03-06 00:00:00          |2021-08-12 17:30:54.6
26 |[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|e6ce16cb79ec1d90b1da9085a6118aeb|494dded5b201313c64ed7f100595b95c|delivered   |2017-05-16 19:41:10     |2017-05-16 19:50:18|2017-05-18 11:40:40         |2017-05-29 11:18:31          |2017-06-07 00:00:00          |2021-08-12 17:30:54.6
26 |[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|e481f51cbdc54678b7cc49136f2d6af7|9ef432eb6251297304e76186b10a928d|delivered   |2017-10-02 10:56:33     |2017-10-02 11:07:15|2017-10-04 19:55:00         |2017-10-10 21:25:13          |2017-10-18 00:00:00          |2021-08-12 17:30:54.6
26 |[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|53cdb2fc8bc7dce0b6741e2150273451|b0830fb4747a6c6d20dea0b8c802d7ef|delivered   |2018-07-24 20:41:37     |2018-07-26 03:24:27|2018-07-26 14:31:00         |2018-08-07 15:27:45          |2018-08-13 00:00:00          |2021-08-12 17:30:54.6
26 |[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|949d5b44dbf5de918fe9c16f97b45f8a|f88197465ea7920adcdbec7375364d82|delivered   |2017-11-18 19:28:06     |2017-11-18 19:45:59|2017-11-22 13:39:59         |2017-12-02 00:28:42          |2017-12-15 00:00:00          |2021-08-12 17:30:54.6
26 |[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|a4591c265e18cb1dcee52889e2d8acc3|503740e9ca751ccdda7ba28e9ab8f608|delivered   |2017-07-09 21:57:05     |2017-07-09 22:10:13|2017-07-11 14:58:04         |2017-07-26 10:57:55          |2017-08-01 00:00:00          |2021-08-12 17:30:54.6
26 |[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|6514b8ad8028c9f2cc2374ded245783f|9bdf08b4b3b52b5526ff42d37d47f222|delivered   |2017-05-16 13:10:30     |2017-05-16 13:22:11|2017-05-22 10:07:46         |2017-05-26 12:55:51          |2017-06-07 00:00:00          |2021-08-12 17:30:54.6
26 |[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|47770eb9100c2d0c44946d9cf07ec65d|41ce2a54c0b03bf3443c3d931a367089|delivered   |2018-08-08 08:38:49     |2018-08-08 08:55:23|2018-08-08 13:50:00         |2018-08-17 18:06:29          |2018-09-04 00:00:00          |2021-08-12 17:30:54.6
26 |[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|e69bfb5eb88e0ed6a785585b27e16dbf|31ad1d1b63eb9962463f764d4e6e0c9d|delivered   |2017-07-29 11:55:02     |2017-07-29 12:05:32|2017-08-10 19:45:24         |2017-08-16 17:14:30          |2017-08-23 00:00:00          |2021-08-12 17:30:54.6
26 |[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|dcb36b511fcac050b97cd5c05de84dc3|3b6828a50ffe546942b7a473d70ac0fc|delivered   |2018-06-07 19:03:12     |2018-06-12 23:31:02|2018-06-11 14:54:00         |2018-06-21 15:34:32          |2018-07-04 00:00:00          |2021-08-12 17:30:54.6
26 |[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|2807d0e504d6d4894d41672727bc139f|72ae281627a6102d9b3718528b420f8a|delivered   |2018-02-03 20:37:35     |2018-02-03 20:50:22|2018-02-05 22:37:28         |2018-02-08 16:13:46          |2018-02-21 00:00:00          |2021-08-12 17:30:54.6
26 |[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
+--------------------------------+--------------------------------+------------+------------------------+-------------------+----------------------------+-----------------------------+-----------------------------+---------------------
---+------------------------------------------+

-------------------------------------------
Batch: 1
-------------------------------------------
+--------------------------------+--------------------------------+------------+------------------------+-------------------+----------------------------+-----------------------------+-----------------------------+---------------------
---+------------------------------------------+
|order_id                        |customer_id                     |order_status|order_purchase_timestamp|order_approved_at  |order_delivered_carrier_date|order_delivered_customer_date|order_estimated_delivery_date|order_items_receive_t
ime|window_time                               |
+--------------------------------+--------------------------------+------------+------------------------+-------------------+----------------------------+-----------------------------+-----------------------------+---------------------
---+------------------------------------------+
|403b97836b0c04a622354cf531062e5f|738b086814c6fcc74b8cc583f8516ee3|delivered   |2018-01-02 19:00:43     |2018-01-02 19:09:04|2018-01-03 18:19:09         |2018-01-20 01:38:59          |2018-02-06 00:00:00          |2021-08-12 17:31:00.0
03 |[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|85ce859fd6dc634de8d2f1e290444043|059f7fc5719c7da6cbafe370971a8d70|delivered   |2017-11-21 00:03:41     |2017-11-21 00:14:22|2017-11-23 21:32:26         |2017-11-27 18:28:00          |2017-12-11 00:00:00          |2021-08-12 17:31:00.0
03 |[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|1790eea0b567cf50911c057cf20f90f9|52142aa69d8d0e1247ab0cada0f76023|delivered   |2018-04-16 21:15:39     |2018-04-16 22:10:26|2018-04-18 13:05:09         |2018-05-05 12:28:34          |2018-05-15 00:00:00          |2021-08-12 17:31:00.0
03 |[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|8563039e855156e48fccee4d611a3196|5f16605299d698660e0606f7eae2d2f9|delivered   |2018-02-17 15:59:46     |2018-02-17 16:15:34|2018-02-20 23:03:56         |2018-03-20 00:59:25          |2018-03-20 00:00:00          |2021-08-12 17:31:00.0
03 |[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|34513ce0c4fab462a55830c0989c7edb|7711cf624183d843aafe81855097bc37|delivered   |2017-07-13 19:58:11     |2017-07-13 20:10:08|2017-07-14 18:43:29         |2017-07-19 14:04:48          |2017-08-08 00:00:00          |2021-08-12 17:31:00.0
03 |[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|82566a660a982b15fb86e904c8d32918|d3e3b74c766bc6214e0c830b17ee2341|delivered   |2018-06-07 10:06:19     |2018-06-09 03:13:12|2018-06-11 13:29:00         |2018-06-19 12:05:52          |2018-07-18 00:00:00          |2021-08-12 17:31:00.0
03 |[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|5ff96c15d0b717ac6ad1f3d77225a350|19402a48fe860416adf93348aba37740|delivered   |2018-07-25 17:44:10     |2018-07-25 17:55:14|2018-07-26 13:16:00         |2018-07-30 15:52:25          |2018-08-08 00:00:00          |2021-08-12 17:31:00.0
03 |[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|432aaf21d85167c2c86ec9448c4e42cc|3df704f53d3f1d4818840b34ec672a9f|delivered   |2018-03-01 14:14:28     |2018-03-01 15:10:47|2018-03-02 21:09:20         |2018-03-12 23:36:26          |2018-03-21 00:00:00          |2021-08-12 17:31:00.0
03 |[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|116f0b09343b49556bbad5f35bee0cdf|3187789bec990987628d7a9beb4dd6ac|delivered   |2017-12-26 23:41:31     |2017-12-26 23:50:22|2017-12-28 18:33:05         |2018-01-08 22:36:36          |2018-01-29 00:00:00          |2021-08-12 17:31:00.0
03 |[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|95266dbfb7e20354baba07964dac78d5|a166da34890074091a942054b36e4265|delivered   |2018-01-08 07:55:29     |2018-01-08 08:07:31|2018-01-24 23:16:37         |2018-01-26 17:32:38          |2018-02-21 00:00:00          |2021-08-12 17:31:00.0
03 |[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|fbf9ac61453ac646ce8ad9783d7d0af6|3a874b4d4c4b6543206ff5d89287f0c3|delivered   |2018-02-20 23:46:53     |2018-02-22 02:30:46|2018-02-26 22:25:22         |2018-03-21 22:03:54          |2018-03-12 00:00:00          |2021-08-12 17:31:00.0
03 |[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|acce194856392f074dbf9dada14d8d82|7e20bf5ca92da68200643bda76c504c6|delivered   |2018-06-04 00:00:13     |2018-06-05 00:35:10|2018-06-05 13:24:00         |2018-06-16 15:20:55          |2018-07-18 00:00:00          |2021-08-12 17:31:00.0
03 |[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|dd78f560c270f1909639c11b925620ea|8b212b9525f9e74e85e37ed6df37693e|delivered   |2018-03-12 01:50:26     |2018-03-12 03:28:34|2018-03-12 21:06:37         |2018-03-21 14:41:50          |2018-03-28 00:00:00          |2021-08-12 17:31:00.0
03 |[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
+--------------------------------+--------------------------------+------------+------------------------+-------------------+----------------------------+-----------------------------+-----------------------------+---------------------
---+------------------------------------------+

stream.stop()
>>> windowed_orders = orders_with_ts.withColumn("window_time", F.window(F.col("order_receive_time"), "10 minute"))
>>> waterwarked_windowed_orders = windowed_orders.withWatermark("window_time", "10 minute")
>>>
>>> streams_joined = waterwarked_windowed_orders \
...     .join(extended_orders_items, ["order_id", "window_time"] , "inner") \
...     .select("order_id", "window_time")
>>>
>>> # doesn't work for inner
... stream = console_output(streams_joined, 20, "update")
Traceback (most recent call last):
  File "<stdin>", line 2, in <module>
  File "<stdin>", line 7, in console_output
  File "/spark2.4/python/pyspark/sql/streaming.py", line 1109, in start
    return self._sq(self._jwrite.start())
  File "/spark2.4/python/lib/py4j-0.10.7-src.zip/py4j/java_gateway.py", line 1257, in __call__
  File "/spark2.4/python/pyspark/sql/utils.py", line 69, in deco
    raise AnalysisException(s.split(': ', 1)[1], stackTrace)
pyspark.sql.utils.AnalysisException: u'Inner join between two streaming DataFrames/Datasets is not supported in Update output mode, only in Append output mode;;\nJoin Inner, ((order_id#24 = order_id#1075) && (window_time#1243-T600000ms
 = window_time#1102))\n:- EventTimeWatermark window_time#1243: struct<start:timestamp,end:timestamp>, interval 10 minutes\n:  +- Project [order_id#24, order_status#25, order_receive_time#28, window#1244 AS window_time#1243]\n:     +- F
ilter isnotnull(order_receive_time#28)\n:        +- Project [named_struct(start, precisetimestampconversion(((((CASE WHEN (cast(CEIL((cast((precisetimestampconversion(order_receive_time#28, TimestampType, LongType) - 0) as double) / ca
st(600000000 as double))) as double) = (cast((precisetimestampconversion(order_receive_time#28, TimestampType, LongType) - 0) as double) / cast(600000000 as double))) THEN (CEIL((cast((precisetimestampconversion(order_receive_time#28,
TimestampType, LongType) - 0) as double) / cast(600000000 as double))) + cast(1 as bigint)) ELSE CEIL((cast((precisetimestampconversion(order_receive_time#28, TimestampType, LongType) - 0) as double) / cast(600000000 as double))) END +
 cast(0 as bigint)) - cast(1 as bigint)) * 600000000) + 0), LongType, TimestampType), end, precisetimestampconversion((((((CASE WHEN (cast(CEIL((cast((precisetimestampconversion(order_receive_time#28, TimestampType, LongType) - 0) as d
ouble) / cast(600000000 as double))) as double) = (cast((precisetimestampconversion(order_receive_time#28, TimestampType, LongType) - 0) as double) / cast(600000000 as double))) THEN (CEIL((cast((precisetimestampconversion(order_receiv
e_time#28, TimestampType, LongType) - 0) as double) / cast(600000000 as double))) + cast(1 as bigint)) ELSE CEIL((cast((precisetimestampconversion(order_receive_time#28, TimestampType, LongType) - 0) as double) / cast(600000000 as doub
le))) END + cast(0 as bigint)) - cast(1 as bigint)) * 600000000) + 0) + 600000000), LongType, TimestampType)) AS window#1244, order_id#24, order_status#25, order_receive_time#28]\n:           +- Project [order_id#24, order_status#25, c
urrent_timestamp() AS order_receive_time#28]\n:              +- Project [value#21.order_id AS order_id#24, value#21.order_status AS order_status#25]\n:                 +- Project [jsontostructs(StructField(order_id,StringType,true), St
ructField(customer_id,StringType,true), StructField(order_status,StringType,true), StructField(order_purchase_timestamp,StringType,true), StructField(order_approved_at,StringType,true), StructField(order_delivered_carrier_date,StringTy
pe,true), StructField(order_delivered_customer_date,StringType,true), StructField(order_estimated_delivery_date,StringType,true), cast(value#8 as string), Some(UTC)) AS value#21, offset#11L]\n:                    +- StreamingRelationV2
 org.apache.spark.sql.kafka010.KafkaSourceProvider@30c8661c, kafka, Map(maxOffsetsPerTrigger -> 15, startingOffsets -> earliest, subscribe -> lesson5_student782_3_orders_topic_json, kafka.bootstrap.servers -> bigdataanalytics2-worker-s
hdpt-v31-1-0:6667), [key#7, value#8, topic#9, partition#10, offset#11L, timestamp#12, timestampType#13], StreamingRelation DataSource(org.apache.spark.sql.SparkSession@235e92aa,kafka,List(),None,List(),None,Map(maxOffsetsPerTrigger ->
15, startingOffsets -> earliest, subscribe -> lesson5_student782_3_orders_topic_json, kafka.bootstrap.servers -> bigdataanalytics2-worker-shdpt-v31-1-0:6667),None), kafka, [key#0, value#1, topic#2, partition#3, offset#4L, timestamp#5,
timestampType#6]\n+- Project [order_id#1075, customer_id#1076, order_status#1077, order_purchase_timestamp#1078, order_approved_at#1079, order_delivered_carrier_date#1080, order_delivered_customer_date#1081, order_estimated_delivery_da
te#1082, order_items_receive_time#1091, window#1103 AS window_time#1102]\n   +- Filter isnotnull(order_items_receive_time#1091)\n      +- Project [named_struct(start, precisetimestampconversion(((((CASE WHEN (cast(CEIL((cast((preciseti
mestampconversion(order_items_receive_time#1091, TimestampType, LongType) - 0) as double) / cast(600000000 as double))) as double) = (cast((precisetimestampconversion(order_items_receive_time#1091, TimestampType, LongType) - 0) as doub
le) / cast(600000000 as double))) THEN (CEIL((cast((precisetimestampconversion(order_items_receive_time#1091, TimestampType, LongType) - 0) as double) / cast(600000000 as double))) + cast(1 as bigint)) ELSE CEIL((cast((precisetimestamp
conversion(order_items_receive_time#1091, TimestampType, LongType) - 0) as double) / cast(600000000 as double))) END + cast(0 as bigint)) - cast(1 as bigint)) * 600000000) + 0), LongType, TimestampType), end, precisetimestampconversion
((((((CASE WHEN (cast(CEIL((cast((precisetimestampconversion(order_items_receive_time#1091, TimestampType, LongType) - 0) as double) / cast(600000000 as double))) as double) = (cast((precisetimestampconversion(order_items_receive_time#
1091, TimestampType, LongType) - 0) as double) / cast(600000000 as double))) THEN (CEIL((cast((precisetimestampconversion(order_items_receive_time#1091, TimestampType, LongType) - 0) as double) / cast(600000000 as double))) + cast(1 as
 bigint)) ELSE CEIL((cast((precisetimestampconversion(order_items_receive_time#1091, TimestampType, LongType) - 0) as double) / cast(600000000 as double))) END + cast(0 as bigint)) - cast(1 as bigint)) * 600000000) + 0) + 600000000), L
ongType, TimestampType)) AS window#1103, order_id#1075, customer_id#1076, order_status#1077, order_purchase_timestamp#1078, order_approved_at#1079, order_delivered_carrier_date#1080, order_delivered_customer_date#1081, order_estimated_
delivery_date#1082, order_items_receive_time#1091]\n         +- Project [order_id#1075, customer_id#1076, order_status#1077, order_purchase_timestamp#1078, order_approved_at#1079, order_delivered_carrier_date#1080, order_delivered_cust
omer_date#1081, order_estimated_delivery_date#1082, current_timestamp() AS order_items_receive_time#1091]\n            +- Project [value#1073.order_id AS order_id#1075, value#1073.customer_id AS customer_id#1076, value#1073.order_statu
s AS order_status#1077, value#1073.order_purchase_timestamp AS order_purchase_timestamp#1078, value#1073.order_approved_at AS order_approved_at#1079, value#1073.order_delivered_carrier_date AS order_delivered_carrier_date#1080, value#1
073.order_delivered_customer_date AS order_delivered_customer_date#1081, value#1073.order_estimated_delivery_date AS order_estimated_delivery_date#1082]\n               +- Project [jsontostructs(StructField(order_id,StringType,true), S
tructField(customer_id,StringType,true), StructField(order_status,StringType,true), StructField(order_purchase_timestamp,StringType,true), StructField(order_approved_at,StringType,true), StructField(order_delivered_carrier_date,StringT
ype,true), StructField(order_delivered_customer_date,StringType,true), StructField(order_estimated_delivery_date,StringType,true), cast(value#1060 as string), Some(UTC)) AS value#1073]\n                  +- StreamingRelationV2 org.apac
he.spark.sql.kafka010.KafkaSourceProvider@4ef04a14, kafka, Map(maxOffsetsPerTrigger -> 15, startingOffsets -> earliest, subscribe -> lesson5_student782_3_orders_topic_json, kafka.bootstrap.servers -> bigdataanalytics2-worker-shdpt-v31-
1-0:6667), [key#1059, value#1060, topic#1061, partition#1062, offset#1063L, timestamp#1064, timestampType#1065], StreamingRelation DataSource(org.apache.spark.sql.SparkSession@235e92aa,kafka,List(),None,List(),None,Map(maxOffsetsPerTri
gger -> 15, startingOffsets -> earliest, subscribe -> lesson5_student782_3_orders_topic_json, kafka.bootstrap.servers -> bigdataanalytics2-worker-shdpt-v31-1-0:6667),None), kafka, [key#1052, value#1053, topic#1054, partition#1055, offs
et#1056L, timestamp#1057, timestampType#1058]\n'
>>> stream = console_output(streams_joined, 20, "append")
-------------------------------------------
Batch: 0
-------------------------------------------
+--------------------------------+------------------------------------------+
|order_id                        |window_time                               |
+--------------------------------+------------------------------------------+
|e481f51cbdc54678b7cc49136f2d6af7|[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|2807d0e504d6d4894d41672727bc139f|[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|136cce7faa42fdb2cefd53fdc79a6098|[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|949d5b44dbf5de918fe9c16f97b45f8a|[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|47770eb9100c2d0c44946d9cf07ec65d|[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|dcb36b511fcac050b97cd5c05de84dc3|[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|a4591c265e18cb1dcee52889e2d8acc3|[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|e6ce16cb79ec1d90b1da9085a6118aeb|[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|ad21c59c0840e6cb83a9ceb5573f8159|[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|e69bfb5eb88e0ed6a785585b27e16dbf|[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|76c6e866289321a7c93b82b54852dc33|[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|6514b8ad8028c9f2cc2374ded245783f|[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|53cdb2fc8bc7dce0b6741e2150273451|[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
+--------------------------------+------------------------------------------+

-------------------------------------------
Batch: 1
-------------------------------------------
+--------------------------------+------------------------------------------+
|order_id                        |window_time                               |
+--------------------------------+------------------------------------------+
|116f0b09343b49556bbad5f35bee0cdf|[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|8563039e855156e48fccee4d611a3196|[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|85ce859fd6dc634de8d2f1e290444043|[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|34513ce0c4fab462a55830c0989c7edb|[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|82566a660a982b15fb86e904c8d32918|[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|fbf9ac61453ac646ce8ad9783d7d0af6|[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|5ff96c15d0b717ac6ad1f3d77225a350|[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|432aaf21d85167c2c86ec9448c4e42cc|[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|95266dbfb7e20354baba07964dac78d5|[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|1790eea0b567cf50911c057cf20f90f9|[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|403b97836b0c04a622354cf531062e5f|[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|dd78f560c270f1909639c11b925620ea|[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|acce194856392f074dbf9dada14d8d82|[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
+--------------------------------+------------------------------------------+

stream.stop()
>>> streams_joined = waterwarked_windowed_orders \
...     .join(extended_orders_items, ["order_id", "window_time"] , "left") \
...     .select("order_id", "window_time")
>>>
>>>
>>> stream = console_output(streams_joined, 20, "update")
-------------------------------------------
Batch: 0
-------------------------------------------
+--------------------------------+------------------------------------------+
|order_id                        |window_time                               |
+--------------------------------+------------------------------------------+
|e481f51cbdc54678b7cc49136f2d6af7|[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|2807d0e504d6d4894d41672727bc139f|[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|136cce7faa42fdb2cefd53fdc79a6098|[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|949d5b44dbf5de918fe9c16f97b45f8a|[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|47770eb9100c2d0c44946d9cf07ec65d|[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|dcb36b511fcac050b97cd5c05de84dc3|[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|a4591c265e18cb1dcee52889e2d8acc3|[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|e6ce16cb79ec1d90b1da9085a6118aeb|[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|ad21c59c0840e6cb83a9ceb5573f8159|[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|e69bfb5eb88e0ed6a785585b27e16dbf|[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|76c6e866289321a7c93b82b54852dc33|[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|6514b8ad8028c9f2cc2374ded245783f|[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|53cdb2fc8bc7dce0b6741e2150273451|[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
+--------------------------------+------------------------------------------+

-------------------------------------------
Batch: 1
-------------------------------------------
+--------------------------------+------------------------------------------+
|order_id                        |window_time                               |
+--------------------------------+------------------------------------------+
|116f0b09343b49556bbad5f35bee0cdf|[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|8563039e855156e48fccee4d611a3196|[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|85ce859fd6dc634de8d2f1e290444043|[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|34513ce0c4fab462a55830c0989c7edb|[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|82566a660a982b15fb86e904c8d32918|[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|fbf9ac61453ac646ce8ad9783d7d0af6|[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|5ff96c15d0b717ac6ad1f3d77225a350|[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|432aaf21d85167c2c86ec9448c4e42cc|[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|95266dbfb7e20354baba07964dac78d5|[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|1790eea0b567cf50911c057cf20f90f9|[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|403b97836b0c04a622354cf531062e5f|[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|dd78f560c270f1909639c11b925620ea|[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
|acce194856392f074dbf9dada14d8d82|[2021-08-12 17:30:00, 2021-08-12 17:40:00]|
+--------------------------------+------------------------------------------+

stream.stop()
  File "<stdin>", line 1
    stream.stop()stream.stop()
                      ^
SyntaxError: invalid syntax
>>> stream.stop()
>>>
